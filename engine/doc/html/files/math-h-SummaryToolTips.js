NDSummary.OnToolTipsLoaded("File:math.h",{613:"<div class=\"NDToolTip TGroup LC\"><div class=\"TTSummary\">Helper macros</div></div>",614:"<div class=\"NDToolTip TMacro LC\"><div class=\"TTSummary\">Get absolute value of a signed 8-bits integer</div></div>",615:"<div class=\"NDToolTip TMacro LC\"><div class=\"TTSummary\">Get absolute value of a signed 16-bits integer</div></div>",616:"<div class=\"NDToolTip TMacro LC\"><div class=\"TTSummary\">Get absolute value of a signed 32-bits integer</div></div>",617:"<div class=\"NDToolTip TMacro LC\"><div class=\"TTSummary\">Invert sign of a signed integer</div></div>",618:"<div class=\"NDToolTip TMacro LC\"><div class=\"TTSummary\">Merge two 4 bits value into a 8 bits integer</div></div>",619:"<div class=\"NDToolTip TMacro LC\"><div class=\"TTSummary\">Merge two 8 bits value into a 16 bits integer</div></div>",620:"<div class=\"NDToolTip TMacro LC\"><div class=\"TTSummary\">Get the power-of-2 modulo of a integer (ie. &quot;MOD_POW2(100, 32)&quot;)</div></div>",621:"<div class=\"NDToolTip TMacro LC\"><div class=\"TTSummary\">Clamp a 8-bits value into a interval</div></div>",622:"<div class=\"NDToolTip TMacro LC\"><div class=\"TTSummary\">Clamp a 16-bits value into a interval</div></div>",623:"<div class=\"NDToolTip TMacro LC\"><div class=\"TTSummary\">Find highest value</div></div>",624:"<div class=\"NDToolTip TMacro LC\"><div class=\"TTSummary\">Find lowest value</div></div>",625:"<div class=\"NDToolTip TGroup LC\"><div class=\"TTSummary\">Quick math routines</div></div>",626:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype626\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">i8 Math_Div10(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">i8&nbsp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">) __FASTCALL __PRESERVES(a, b, c, iyl, iyh)</td></tr></table></div></div><div class=\"TTSummary\">8-bits fast 10 times division</div></div>",627:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype627\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">i16 Math_Div10_16b(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">i16&nbsp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">) __FASTCALL __PRESERVES(b, d, e, iyl, iyh)</td></tr></table></div></div><div class=\"TTSummary\">16-bits fast 10 times division</div></div>",628:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype628\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">u8 Math_Mod10(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">u8&nbsp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">) __PRESERVES(b, c, d, e, iyl, iyh)</td></tr></table></div></div><div class=\"TTSummary\">8-bits fast modulo-10</div></div>",629:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype629\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">u8 Math_Mod10_16b(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">u16&nbsp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">) __FASTCALL __PRESERVES(b, c, d, e, iyl, iyh)</td></tr></table></div></div><div class=\"TTSummary\">16-bits fast modulo-10</div></div>",630:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype630\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">u8 Math_Flip(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">u8&nbsp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">) __PRESERVES(c, d, e, h, l, iyl, iyh)</td></tr></table></div></div><div class=\"TTSummary\">Bits flip routine</div></div>",631:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype631\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">u16 Math_Flip_16b(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">u16&nbsp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">) __PRESERVES(c, iyl, iyh)</td></tr></table></div></div><div class=\"TTSummary\">Bits flip routine</div></div>",632:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype632\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">inline</span> i8 Math_Negative(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">i8&nbsp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Get the negative (additive inverse) of a 8-bit register</div></div>",633:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype633\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">i16 Math_Negative16(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">i16&nbsp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">) __FASTCALL __PRESERVES(b, c, d, e, iyl, iyh)</td></tr></table></div></div><div class=\"TTSummary\">Get the negative (additive inverse) of a 16-bit register</div></div>",634:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype634\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">u16 Math_Swap(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">u16&nbsp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">) __PRESERVES(a, b, c, iyl, iyh)</td></tr></table></div></div><div class=\"TTSummary\">Swap MSB and LSB bytes</div></div>",635:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype635\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">i8 Math_SignedDiv2(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">i8&nbsp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">) __naked __PRESERVES(b, c, d, e, h, l, iyl, iyh)</td></tr></table></div></div><div class=\"TTSummary\">Divide a signed 8-bits integer by 2 using shift</div></div>",636:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype636\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">i8 Math_SignedDiv4(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">i8&nbsp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">) __naked __PRESERVES(b, c, d, e, h, l, iyl, iyh)</td></tr></table></div></div><div class=\"TTSummary\">Divide a signed 8-bits integer by 4 using shift</div></div>",637:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype637\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">i8 Math_SignedDiv8(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">i8&nbsp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">) __naked __PRESERVES(b, c, d, e, h, l, iyl, iyh)</td></tr></table></div></div><div class=\"TTSummary\">Divide a signed 8-bits integer by 8 using shift</div></div>",638:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype638\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">i8 Math_SignedDiv16(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">i8&nbsp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">) __naked __PRESERVES(b, c, d, e, h, l, iyl, iyh)</td></tr></table></div></div><div class=\"TTSummary\">Divide a signed 8-bits integer by 16 using shift</div></div>",639:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype639\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">i8 Math_SignedDiv32(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">i8&nbsp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">) __naked __PRESERVES(b, c, d, e, h, l, iyl, iyh)</td></tr></table></div></div><div class=\"TTSummary\">Divide a signed 8-bits integer by 32 using shift</div></div>",640:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype640\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">inline</span> u8 Math_Abs(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">i8&nbsp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Get absolute value of a signed 8-bits integer</div></div>",641:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype641\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">inline</span> u16 Math_Abs_16b(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">i16&nbsp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Get absolute value of a signed 16-bits integer</div></div>",642:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype642\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">inline</span> u32 Math_Abs_32b(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">i32&nbsp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Get absolute value of a signed 32-bits integer</div></div>",643:"<div class=\"NDToolTip TGroup LC\"><div class=\"TTSummary\">Random routines</div></div>",644:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype644\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> Math_SetRandomSeed8(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">u8&nbsp;</td><td class=\"PName last\">seed</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Initialize random generator seed</div></div>",645:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype645\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">u8 Math_GetRandom8()</div></div><div class=\"TTSummary\">Generates 8-bit pseudorandom numbers</div></div>",646:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype646\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">inline</span> u8 Math_GetRandomMax8(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">u8&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Generates 8-bit pseudorandom numbers between 0 and max-1 value.</div></div>",647:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype647\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">inline</span> u8 Math_GetRandomRange8(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">u8&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PType first\">u8&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Generates 8-bit pseudorandom numbers between min and max-1 value.</div></div>",648:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype648\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> Math_SetRandomSeed16(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">u16&nbsp;</td><td class=\"PName last\">seed</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Initialize random generator seed</div></div>",649:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype649\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">u16 Math_GetRandom16() __FASTCALL</div></div><div class=\"TTSummary\">Generates 16-bit pseudorandom numbers</div></div>",650:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype650\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">inline</span> u16 Math_GetRandomMax16(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">u16&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Generates 16-bit pseudorandom numbers between 0 and max-1 value.</div></div>",651:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype651\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">inline</span> u16 Math_GetRandomRange16(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">u16&nbsp;</td><td class=\"PName last\">min,</td></tr><tr><td class=\"PType first\">u16&nbsp;</td><td class=\"PName last\">max</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Generates 16-bit pseudorandom numbers between min and max-1 value.</div></div>"});